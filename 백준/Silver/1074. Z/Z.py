# N이 1이 될 때까지 4개로 분할하여 문제를 해결한다.
# r,c => (0,0) : 1, (0,1) : 2, (1,0): 3, (1,1): 4

N, r, c = map(int, input().split())
board = [[1, 2], [3, 4]]
tmp = 0
while True:
    if N == 1:
        tmp += board[r][c]
        break
    else:
        val = 2 ** (N - 1)  # 한 변의 길이의 절반
        if r < val:      # 왼쪽 윗부분에 목표가 위치할 경우 N만 줄여주면 된다.
            if c >= val:  # 행은 반보다 작고, 열은 반보다 크다 -> 오른쪽 윗 부분
                c -= val
                tmp += 2 ** (2 * N - 2)  # 정사각형의 총 크기: 2 ** 2N,
                                         # 분할한 정사각형의 크기: 4분할 했으므로 4로 나누면 2 ** (2N-2)
        else:
            if c < val:  # 행은 반보다 크고, 열은 반보다 작다 -> 왼쪽 아랫 부분
                r -= val
                tmp += 2 * (2 ** (2 * N - 2))
            else:  # 행은 반보다 크고, 열은 반보다 크다 -> 오른쪽 아랫 부분
                r -= val
                c -= val
                tmp += 3 * (2 ** (2 * N - 2))
        N -= 1

print(tmp-1)    # 첫 번째 방문을 문제에선 0 번째로 계산했으므로 1을 빼준다.
